module.exports = {
  parser: '@babel/eslint-parser',
  plugins: [
    'import',
    '@typescript-eslint',
    'react',
    'react-hooks',
    'eslint-plugin-prettier',
  ],
  extends: [
    'eslint-config-airbnb-base',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'eslint-config-prettier', // this needs to be the last one in list
  ],
  parserOptions: {
    ecmaVersion: 2017,
    ecmaFeatures: {
      legacyDecorators: false,
      experimentalDecorators: false,
      jsx: true,
    },
    sourceType: 'module',
    requireConfigFile: false,
    allowImportExportEverywhere: true,
  },
  env: {
    browser: true,
    node: false,
    es6: true,
  },
  settings: {
    react: {
      createClass: 'createReactClass', // Regex for Component Factory to use, default to "createReactClass"
      pragma: 'React', // Pragma to use, default to "React"
      version: 'detect',
    },
    propWrapperFunctions: ['forbidExtraProps'],
    'import/parsers': {
      [require.resolve('@typescript-eslint/parser')]: ['.ts', '.tsx', '.d.ts'],
    },
    'import/resolver': {
      [require.resolve('eslint-import-resolver-node')]: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
      [require.resolve('eslint-import-resolver-typescript')]: {
        alwaysTryTypes: true,
      },
    },
  },
  rules: {
    'arrow-parens': [2, 'as-needed'],
    'react/prop-types': [2],
    'no-underscore-dangle': [
      'error',
      { allow: ['__docgenInfo', '__NEXT_DATA__'] },
    ],
    'import/prefer-default-export': 'off',
    'react/jsx-uses-vars': 2,
    'import/no-extraneous-dependencies': [
      'error',
      { devDependencies: ['**/*.test.js', '**/*.spec.js', '**/*.stories.js'] },
    ],
    camelcase: [
      2,
      {
        allow: [
          'UNSAFE_componentDidMount',
          'UNSAFE_componentWillReceiveProps',
          'UNSAFE_componentWillUpdate',
        ],
      },
    ],
    'class-methods-use-this': [
      2,
      {
        exceptMethods: ['render', 'componentWillMount'],
      },
    ],
    'eol-last': ['warn', 'always'],
    'import/first': 2,
    'no-console': ['error', { allow: ['error'] }],
    'no-debugger': 2,
    'no-undef': 0,
    'prettier/prettier': ['warn'],
    'prefer-destructuring': [
      'error',
      {
        array: false,
        object: false,
      },
      {
        enforceForRenamedProperties: false,
      },
    ],
    radix: 0,
    'react/boolean-prop-naming': ['warn', { validateNested: true }],
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['error'],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    // 'no-alert': 'off',
    // 'import/newline-after-import': 'off',
    // 'consistent-return': 'off',
    // 'global-require': 'off',
    // 'no-prototype-builtins': 'off',
    // 'class-methods-use-this': 'off',
    // 'no-unused-vars': 'off',
    // 'no-else-return': 'off',
    // 'no-param-reassign': 'off',
    // 'import/no-extraneous-dependencies': 'off',
    // 'no-shadow': 'off',
    // 'import/no-dynamic-require': 'off',
    // 'no-unneeded-ternary': 'off',
    // 'no-plusplus': 'off',
    // 'no-unused-expressions': 'off',
    // 'no-nested-ternary': 'off',
    // 'no-return-assign': 'off',
    // 'no-use-before-define': 'off',
    // 'func-names': 'off',
    // 'no-return-await': 'off',
    // 'no-script-url': 'off',
    // 'array-callback-return': 'off',
    // 'arrow-body-style': 'off',
    // 'block-scoped-var': 'off',
    // 'default-case': 'off',
    // 'dot-notation': 'off',
    // 'guard-for-in': 'off',
    // 'import/extensions': 'off',
    // 'import/first': 'off',
    // 'lines-around-directive': 'off',
    // 'max-len': 'off',
    // 'no-case-declarations': 'off',
    // 'no-cond-assign': 'off',
    // 'no-console': 'off',
    // 'no-dupe-keys': 'off',
    // 'no-empty': 'off',
    // 'no-lonely-if': 'off',
    // 'no-mixed-operators': 'off',
    // 'no-redeclare': 'off',
    // 'no-restricted-syntax': 'off',

    // 'no-undef': 'off',
    // 'no-unreachable': 'off',

    // 'no-useless-constructor': 'off',
    // 'no-useless-escape': 'off',
    // 'no-var': 'off',
    // 'one-var': 'off',
    // 'prefer-arrow-callback': 'off',
    // 'prefer-const': 'off',
    // 'prefer-rest-params': 'off',
    // 'prefer-spread': 'off',
    // 'prefer-template': 'off',
    // 'spaced-comment': 'off',
    // 'vars-on-top': 'off',
    // curly: 'off',
    // radix: 'off',
    // strict: 'off',
  },
};
